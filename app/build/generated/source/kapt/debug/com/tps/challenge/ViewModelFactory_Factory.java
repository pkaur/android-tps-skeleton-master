// Generated by Dagger (https://dagger.dev).
package com.tps.challenge;

import androidx.lifecycle.ViewModel;
import dagger.Lazy;
import dagger.internal.DaggerGenerated;
import dagger.internal.DoubleCheck;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class ViewModelFactory_Factory<T extends ViewModel> implements Factory<ViewModelFactory<T>> {
  private final Provider<T> viewModelProvider;

  public ViewModelFactory_Factory(Provider<T> viewModelProvider) {
    this.viewModelProvider = viewModelProvider;
  }

  @Override
  public ViewModelFactory<T> get() {
    return newInstance(DoubleCheck.lazy(viewModelProvider));
  }

  public static <T extends ViewModel> ViewModelFactory_Factory<T> create(
      Provider<T> viewModelProvider) {
    return new ViewModelFactory_Factory<T>(viewModelProvider);
  }

  public static <T extends ViewModel> ViewModelFactory<T> newInstance(Lazy<T> viewModel) {
    return new ViewModelFactory<T>(viewModel);
  }
}
